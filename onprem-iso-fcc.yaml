variant: fcos
version: 1.1.0
passwd:
  users:
    - name: core
      ssh_authorized_keys: ["replace-with-your-ssh-public-key"]
      groups: [ sudo ]
systemd:
    units:
        - name: assisted-service-env-prep.service
          enabled: true
          contents: |
            [Unit]
            After=network-online.target

            [Service]
            Type=oneshot
            Restart=no
            ExecStart=/bin/bash /etc/assisted-service/environment_prep.sh

            [Install]
            WantedBy=multi-user.target
        - name: assisted-service-ip-configuration.service
          enabled: true
          contents: |
            [Unit]
            After=network-online.target

            [Service]
            Type=forking
            Restart=no
            ExecStart=/bin/bash /etc/assisted-service/startup_script.sh

            [Install]
            WantedBy=multi-user.target
        - name: assisted-service.service
          enabled: true
          contents: |
            [Unit]
            After=assisted-service-env-prep.service
            [Service]
            Type=forking
            Restart=no
            ExecStart=podman play kube --network=podman1 --authfile=/etc/assisted-service/auth.json --configmap /etc/assisted-service/configmap-disconnected.yml /etc/assisted-service/pod-persistent-disconnected.yml
            TimeoutStartSec=300

            [Install]
            WantedBy=multi-user.target
storage:
    files:
        - path: /etc/assisted-service/file.crt
          mode: 0644
          contents:
            inline: replace-with-your-offline-reg-cert
        - path: /etc/assisted-service/environment_prep.sh
          mode: 0755
          contents:
            inline: |
              #!/bin/bash
              printf "\n%s registry.offline.redhat.lan\n" "2620:52:0:1305::101" >> /etc/hosts
              hostnamectl set-hostname ai.offline.redhat.lan
              printf "Welcome to the ai.offline.redhat.lan\n " > /etc/motd
              echo "y\n" | HOSTNAME=`hostname` ssh-keygen -t rsa -C "$HOSTNAME" -f "$HOME/.ssh/id_rsa" -P ""
              mkdir -p /etc/assisted-service/
              sudo cp /etc/assisted-service/file.crt /etc/pki/ca-trust/source/anchors/
              wait
              sudo update-ca-trust
              podman login -uadmin -pSup3rR3gistry registry.offline.redhat.lan:5000
              wait
              podman network create --ipv6 --gateway fd00::1:8:1 --subnet fd00::1:8:0/112 podman1
              wait
              echo "alias aicli='podman run --authfile=/etc/assisted-service/auth.json --security-opt label=disable --net host -it --rm -e AI_URL=ai.offline.redhat.lan:8080 -v $HOME/.ssh:/root/.ssh -v /etc/assisted-service:/workdir registry.offline.redhat.lan:5000/karmab/aicli:latest'" >> /root/.bashrc
              wait
              echo "alias aicli='podman run --authfile=/etc/assisted-service/auth.json --security-opt label=disable --net host -it --rm -e AI_URL=ai.offline.redhat.lan:8080 -v $HOME/.ssh:/root/.ssh -v /etc/assisted-service:/workdir registry.offline.redhat.lan:5000/karmab/aicli:latest'" >> /var/home/core/.bashrc
              wait
        - path: /etc/assisted-service/configmap-disconnected.yml
          mode: 0644
          contents:
            inline: |
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: config
                data:
                  ASSISTED_SERVICE_HOST: ai.offline.redhat.lan:8090
                  ASSISTED_SERVICE_SCHEME: http
                  AUTH_TYPE: none
                  DB_HOST: ::1
                  DB_NAME: installer
                  DB_PASS: admin
                  DB_PORT: "5432"
                  DB_USER: admin
                  DEPLOY_TARGET: onprem
                  DISK_ENCRYPTION_SUPPORT: "true"
                  DUMMY_IGNITION: "false"
                  ENABLE_SINGLE_NODE_DNSMASQ: "true"
                  HW_VALIDATOR_REQUIREMENTS: '[{"version":"default","master":{"cpu_cores":4,"ram_mib":16384,"disk_size_gb":100,"installation_disk_speed_threshold_ms":10,"network_latency_threshold_ms":100,"packet_loss_percentage":0},"worker":{"cpu_cores":2,"ram_mib":8192,"disk_size_gb":100,"installation_disk_speed_threshold_ms":10,"network_latency_threshold_ms":1000,"packet_loss_percentage":10},"sno":{"cpu_cores":8,"ram_mib":16384,"disk_size_gb":100,"installation_disk_speed_threshold_ms":10}}]'
                  IMAGE_SERVICE_BASE_URL: http://ai.offline.redhat.lan:8888
                  IPV6_SUPPORT: "true"
                  ISO_IMAGE_TYPE: "full-iso"
                  LISTEN_PORT: "8888"
                  NTP_DEFAULT_SERVER: ""
                  OS_IMAGES: '[{"openshift_version":"4.12","cpu_architecture":"x86_64","url":"http://[2620:52:0:1305::101]:80/rhcos-4.12.2-live.x86_64.iso","version":"412.86.202301311551-0"}]'
                  POSTGRESQL_DATABASE: installer
                  POSTGRESQL_PASSWORD: admin
                  POSTGRESQL_USER: admin
                  PUBLIC_CONTAINER_REGISTRIES: 'quay.io'
                  RELEASE_IMAGES: '[{"openshift_version":"4.12","cpu_architecture":"x86_64","cpu_architectures":["x86_64"],"url":"registry.offline.redhat.lan:5000/ocp-release:4.12.2-x86_64","version":"4.12.2","default":true}]'
                  SERVICE_BASE_URL: http://ai.offline.redhat.lan:8090
                  STORAGE: filesystem
                  ENABLE_UPGRADE_AGENT: "false"
                  AGENT_DOCKER_IMAGE: "registry.offline.redhat.lan:5000/edge-infrastructure/assisted-installer-agent:latest"
                  CONTROLLER_IMAGE: "registry.offline.redhat.lan:5000/edge-infrastructure/assisted-installer-controller:latest"
                  INSTALLER_IMAGE: "registry.offline.redhat.lan:5000/edge-infrastructure/assisted-installer:latest"

                  registries.conf: |
                    unqualified-search-registries = ["registry.access.redhat.com", "docker.io"]
                    [[registry]]
                        prefix = ""
                        location = "quay.io/openshift-release-dev/ocp-release"
                        mirror-by-digest-only = true
                        [[registry.mirror]]
                        location = "registry.offline.redhat.lan:5000/ocp4"
                    [[registry]]
                        prefix = ""
                        location = "quay.io/openshift-release-dev/ocp-v4.0-art-dev"
                        mirror-by-digest-only = true
                        [[registry.mirror]]
                        location = "registry.offline.redhat.lan:5000/ocp4"
                  tls-ca-bundle.pem: |
                    -----BEGIN CERTIFICATE-----
                    <certificate_content>
                    -----END CERTIFICATE-----
        - path: /etc/assisted-service/pod-persistent-disconnected.yml
          mode: 0644
          contents:
            inline: |
                apiVersion: v1
                kind: Pod
                metadata:
                  labels:
                    app: assisted-installer
                  name: assisted-installer
                spec:
                  containers:
                  - args:
                    - run-postgresql
                    image: registry.offline.redhat.lan:5000/centos7/postgresql-12-centos7:latest
                    name: db
                    envFrom:
                    - configMapRef:
                        name: config
                    volumeMounts:
                      - mountPath: /var/lib/pgsql
                        name: pg-data
                  - image: registry.offline.redhat.lan:5000/edge-infrastructure/assisted-installer-ui:latest
                    name: ui
                    ports:
                    - hostPort: 8080
                    envFrom:
                    - configMapRef:
                        name: config
                  - image: registry.offline.redhat.lan:5000/edge-infrastructure/assisted-image-service:latest
                    name: image-service
                    ports:
                    - hostPort: 8888
                    envFrom:
                    - configMapRef:
                        name: config
                  - image: registry.offline.redhat.lan:5000/edge-infrastructure/assisted-service:latest
                    name: service
                    ports:
                    - hostPort: 8090
                    envFrom:
                    - configMapRef:
                        name: config
                    volumeMounts:
                      - mountPath: /data
                        name: ai-data
                      - mountPath: /etc/containers
                        name: mirror-registry-config
                      - mountPath: /etc/pki/ca-trust/extracted/pem
                        subPath: tls-ca-bundle.pem
                        name: mirror-registry-config
                  restartPolicy: Never
                  volumes:
                    - name: ai-data
                      persistentVolumeClaim:
                        path: /opt/ai/ai-service-data
                        type: Directory  
                    - name: pg-data
                      persistentVolumeClaim:
                        path: /opt/ai/ai-db-data
                        type: Directory  
                    - name: mirror-registry-config
                      configMap:
                        name: config
                        deafultMode: 420
                        items:
                          - key: registries.conf
                            path: registries.conf
                          - key: tls-ca-bundle.pem
                            path: tls-ca-bundle.pem
        - path: /etc/assisted-service/auth.json
          mode: 0644
          contents:
            inline: replace-with-your-urlencoded-pull-secret
        - path: /etc/assisted-service/startup_script.sh
          mode: 0755
          contents:
            inline: |
              #!/bin/bash
              ips=$(hostname -I)
              read -r -a ipArr <<< "$ips"
              for ip in "${ipArr[@]}"
                  do
                      printf "\n%s ai.offline.redhat.lan\n" "$ip" >> /etc/hosts
                  done
              ips_cs=`echo $ips | xargs | sed -e 's/ /,/g'`
